name: Deploy to AWS

on:
  push:
    tags:
      - "v*-qa"
      - "v*-dev"

permissions:
  contents: read
  actions: read
  checks: write

jobs:
  deploy:
    name: Deploy to AWS
    runs-on: ubuntu-latest
    needs: [containerize]
    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_ECR_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Deploy to AWS ECS
        env:
          CLUSTER_NAME: ${{ secrets.AWS_ECS_CLUSTER }}
          SERVICE_NAME: ${{ secrets.AWS_ECS_SERVICE }}
          CONTAINER_NAME: "webapp3_api"
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          IFS='-'
          read -a parsed_tag <<< "${{ needs.tagify.outputs.the_tag }}"
          VERSION_ONLY=${parsed_tag[0]}
          ENVIRONMENT=${parsed_tag[1]}
          IFS=' '
          IMAGE_TAG=$REGISTRY/webapp3_api:${{ needs.tagify.outputs.the_tag }}
          
          echo "Deploying image: $IMAGE_TAG"
          aws ecs update-service --cluster $CLUSTER_NAME --service $SERVICE_NAME \
            --force-new-deployment
      
      - name: Cleanup
        run: docker logout
        if: always()
